=================================================================
==6530==ERROR: AddressSanitizer: stack-buffer-overflow on address 0x7ffeb35e4de8 at pc 0x55a9d256fd3d bp 0x7ffeb35e4db0 sp 0x7ffeb35e4da0
READ of size 4 at 0x7ffeb35e4de8 thread T0
    #0 0x55a9d256fd3c in main /home/user/P/fuzzer/build/asan.c:4
    #1 0x7f787fc29d8f in __libc_start_call_main ../sysdeps/nptl/libc_start_call_main.h:58
    #2 0x7f787fc29e3f in __libc_start_main_impl ../csu/libc-start.c:392
    #3 0x55a9d249a3a4 in _start (/home/user/P/fuzzer/build/asan+0x83a4)

Address 0x7ffeb35e4de8 is located in stack of thread T0 at offset 40 in frame
    #0 0x55a9d256fc6d in main /home/user/P/fuzzer/build/asan.c:2

  This frame has 1 object(s):
    [32, 40) 'i' (line 3) <== Memory access at offset 40 overflows this variable
HINT: this may be a false positive if your program uses some custom stack unwind mechanism, swapcontext or vfork
      (longjmp and C++ exceptions *are* supported)
SUMMARY: AddressSanitizer: stack-buffer-overflow /home/user/P/fuzzer/build/asan.c:4 in main
Shadow bytes around the buggy address:
  0x1000566b4960: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b4970: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b4980: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b4990: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b49a0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x1000566b49b0: 00 00 00 00 00 00 00 00 f1 f1 f1 f1 00[f3]f3 f3
  0x1000566b49c0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b49d0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b49e0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b49f0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x1000566b4a00: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==6530==ABORTING